apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lagoon-core.api.fullname" . }}
  labels:
    {{- include "lagoon-core.api.labels" . | nindent 4 }}
spec:
{{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "lagoon-core.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/api.secret: {{ include (print $.Template.BasePath "/api.secret.yaml") . | sha256sum }}
        checksum/common.secret: {{ include (print $.Template.BasePath "/common.secret.yaml") . | sha256sum }}
    {{- with .Values.api.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "lagoon-core.api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lagoon-core.api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.api.securityContext | nindent 12 }}
        image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        env:
        - name: API_DB_HOST
          value: {{ include "lagoon-core.apiDB.fullname" . }}
        - name: REDIS_HOST
          value: {{ include "lagoon-core.apiRedis.fullname" . }}
        - name: RABBITMQ_HOST
          value: {{ include "lagoon-core.broker.fullname" . }}
        envFrom:
        - secretRef:
            name: {{ include "lagoon-core.api.fullname" . }}-env
        - secretRef:
            name: {{ include "lagoon-core.fullname" . }}-common-env
        ports:
        - name: http-3000
          containerPort: 3000
        livenessProbe:
          httpGet:
            path: /status
            port: http-3000
          initialDelaySeconds: 150
        readinessProbe:
          httpGet:
            path: /status
            port: http-3000
        startupProbe:
          httpGet:
            path: /status
            port: http-3000
          failureThreshold: 20
          periodSeconds: 20
        resources:
          {{- toYaml .Values.api.resources | nindent 12 }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
